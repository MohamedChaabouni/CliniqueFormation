// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domains.Dossier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumDossier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("_CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("_LastModiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dossiers");
                });

            modelBuilder.Entity("Domains.Hospitalisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MedecinId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("_CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("_LastModiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MedecinId");

                    b.HasIndex("PatientId");

                    b.ToTable("Hospitalisations");
                });

            modelBuilder.Entity("Domains.Hospitaliser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HeureArrivee")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HeureDepart")
                        .HasColumnType("datetime2");

                    b.Property<int>("HospitalisationId")
                        .HasColumnType("int");

                    b.Property<int>("MedecinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("_CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("_LastModiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HospitalisationId");

                    b.HasIndex("MedecinId");

                    b.ToTable("Hospitalisers");
                });

            modelBuilder.Entity("Domains.Medecin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAssMaladie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumLicence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("_CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("_LastModiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medecins");
                });

            modelBuilder.Entity("Domains.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DossierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("_CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("_LastModiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DossierId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Domains.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DossierId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NumAssMaladie")
                        .HasColumnType("datetime2");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexe")
                        .HasColumnType("int");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("_CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("_LastModiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DossierId")
                        .IsUnique()
                        .HasFilter("[DossierId] IS NOT NULL");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Domains.RendezVous", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DossierId")
                        .HasColumnType("int");

                    b.Property<DateTime>("_CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("_LastModiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DossierId");

                    b.ToTable("RendezVous");
                });

            modelBuilder.Entity("Domains.SecretaireInfirmiere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumAssMaladie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("_CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("_LastModiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SecretaireInfirmieres");
                });

            modelBuilder.Entity("Domains.SecretairePatient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int>("SecretaireInfirmerieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("_CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("_LastModiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("_ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("SecretaireInfirmerieId");

                    b.ToTable("SecretairePatients");
                });

            modelBuilder.Entity("Domains.Hospitalisation", b =>
                {
                    b.HasOne("Domains.Medecin", "Medecin")
                        .WithMany()
                        .HasForeignKey("MedecinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domains.Patient", "Patient")
                        .WithMany("Hospitalisations")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domains.Hospitaliser", b =>
                {
                    b.HasOne("Domains.Hospitalisation", "Hospitalisation")
                        .WithMany("Hospitalisers")
                        .HasForeignKey("HospitalisationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domains.Medecin", "Medecin")
                        .WithMany("Hospitalisers")
                        .HasForeignKey("MedecinId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Domains.Note", b =>
                {
                    b.HasOne("Domains.Dossier", "Dossier")
                        .WithMany("Notes")
                        .HasForeignKey("DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domains.Patient", b =>
                {
                    b.HasOne("Domains.Dossier", "Dossier")
                        .WithOne("Patient")
                        .HasForeignKey("Domains.Patient", "DossierId");
                });

            modelBuilder.Entity("Domains.RendezVous", b =>
                {
                    b.HasOne("Domains.Dossier", "Dossier")
                        .WithMany("RendezVous")
                        .HasForeignKey("DossierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domains.SecretairePatient", b =>
                {
                    b.HasOne("Domains.Patient", "Patient")
                        .WithMany("SecretairePatients")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domains.SecretaireInfirmiere", "SecretaireInfirmerie")
                        .WithMany("SecretairePatients")
                        .HasForeignKey("SecretaireInfirmerieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
